{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","background","color","fontFamily","heading","rows","onChange","event","target","value","backgroundColor","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototype","PropTypes","string","defaultProps","about","App","setmode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fc7eaef4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <href className=\"navbar-brand\" href=\"#\">{props.title}</href>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype={\r\n  title : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps ={ \r\n  title : 'Set title here'\r\n ,about: 'about us'\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n  \r\n  const handleUpClick = ()=>{\r\n    let newText = text.toUpperCase()\r\n    setText(newText)\r\n  }\r\n\r\n  const handleLoClick = ()=>{\r\n    let newText = text.toLowerCase()\r\n    setText(newText)\r\n  }\r\n\r\n  const handleClClick = ()=>{\r\n    let newText = \"\"\r\n    setText(newText)\r\n  }\r\n\r\n  const handleCoClick = ()=>{\r\n    let text = document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n  }\r\n\r\n  const handleExClick = ()=>{\r\n   let newText = text.split(/[ ]+/);\r\n   setText(newText.join(\" \"));\r\n  }\r\n  \r\n  const handleOnChange = (event)=>{\r\n    setText(event.target.value);\r\n  }\r\n  const [text ,setText] = useState(\"\");\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='container' style={{background:props.mode==='light'?'dark':'light',color:props.mode==='dark'?'white':'black',fontFamily:'Georgia, serif'}}>\r\n      <h2>{props.heading}</h2>\r\n       <div className=\"mb-3\">\r\n       <textarea className=\"form-control\" id=\"mybox\" rows=\"8\" onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#0b0b45':'white',color:props.mode==='dark'?'white':'black'}} value={text}></textarea>\r\n       </div>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>ToUpperCase</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>ToLowerCase</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleClClick}>Clear Text</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleCoClick}>Copy Text</button>\r\n       <button className=\"btn btn-primary mx-1\" onClick={handleExClick}>Remove Extra Space</button>\r\n\r\n</div>\r\n<div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n  <h2><b>Your Text Summary</b></h2>\r\n  <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n  <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n  <h3>Summary</h3>\r\n  <p>{text.length>0?text:\"Enter Your Text \"}</p>\r\n</div>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from \"react\";\nimport \"./App.css\";\n// import About from './Components/About';\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\nimport React from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    } else {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#0b0b45\";\n    }\n  };\n  document.body.style.fontFamily = \"Georgia, serif\";\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"PlayWithText\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"container\">\n        {/* { <Routes> \n            { <Route\n              path=\"/\"\n              element={\n                />\n               } } */}\n        <Textform heading=\"Enter Your Text \" mode={mode} />\n        {/* <Route path=\"/about\" element={<About />} /> */}\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}